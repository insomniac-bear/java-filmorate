CREATE TABLE IF NOT EXISTS friend_statuses (
    id      BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    status  ENUM('ACCEPTED', 'PENDING')
);

CREATE TABLE IF NOT EXISTS mpa (
    id   BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name ENUM('G', 'PG', 'PG-13', 'R', 'NC-17')
);

CREATE TABLE IF NOT EXISTS genres (
    id   BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    id           BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name         VARCHAR(40) NOT NULL,
    description  VARCHAR(200) NOT NULL,
    release_date TIMESTAMP WITH TIME ZONE,
    duration     INTEGER,
    mpa_id       BIGINT REFERENCES mpa ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS users (
    id       BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    email    VARCHAR(40) NOT NULL,
    login    VARCHAR(50) NOT NULL,
    name     VARCHAR(50),
    birthday TIMESTAMP WITH TIME ZONE
);

CREATE TABLE IF NOT EXISTS friends (
    id        BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id   BIGINT REFERENCES users (id) ON DELETE CASCADE NOT NULL,
    friend_id BIGINT REFERENCES users (id) ON DELETE CASCADE NOT NULL,
    status_id BIGINT REFERENCES friend_statuses ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS films_genres (
    id       BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    film_id  BIGINT REFERENCES films ON DELETE CASCADE NOT NULL,
    genre_id BIGINT REFERENCES genres ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS likes (
    id      BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    film_id BIGINT REFERENCES films ON DELETE CASCADE NOT NULL,
    user_id BIGINT REFERENCES users ON DELETE CASCADE NOT NULL
);
